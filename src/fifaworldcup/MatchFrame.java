/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package fifaworldcup;

import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.bson.Document;

/**
 *
 * @author Utente
 */
public class MatchFrame extends javax.swing.JFrame {

    /**
     * Creates new form MatchFrame
     */
    public MatchFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        homeTeamLabel = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        homeTeamTable = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        awayTeamLabel = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        awayTeamTable = new javax.swing.JTable();

        setTitle("Match");

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Home Team"));

        homeTeamLabel.setText("Team Name");

        homeTeamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Line-up", "Shirt", "Player Name", "Position", "Event"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        homeTeamTable.setIntercellSpacing(new java.awt.Dimension(15, 2));
        homeTeamTable.setRowHeight(21);
        homeTeamTable.getTableHeader().setReorderingAllowed(false);
        homeTeamTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                homeTeamTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(homeTeamTable);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(homeTeamLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(homeTeamLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 313, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Away Team"));

        awayTeamLabel.setText("Team Name");

        awayTeamTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Line-up", "Shirt", "Player Name", "Position", "Event"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        awayTeamTable.setIntercellSpacing(new java.awt.Dimension(15, 2));
        awayTeamTable.setRowHeight(21);
        awayTeamTable.getTableHeader().setReorderingAllowed(false);
        awayTeamTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                awayTeamTableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(awayTeamTable);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(awayTeamLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 378, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(awayTeamLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void homeTeamTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_homeTeamTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = homeTeamTable.getSelectedRow();
        String player = (String) homeTeamTable.getValueAt(selectedRow, 2);
        showPlayerFrame(player);
    }//GEN-LAST:event_homeTeamTableMouseClicked

    private void awayTeamTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_awayTeamTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = awayTeamTable.getSelectedRow();
        String player = (String) awayTeamTable.getValueAt(selectedRow, 2);
        showPlayerFrame(player);
    }//GEN-LAST:event_awayTeamTableMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MatchFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MatchFrame().setVisible(true);
            }
        });
    }
    
    public void fillPlayersTables(ArrayList<Document> players, String homeInitials, String awayInitials) {
        homeTeamLabel.setText(homeInitials);
        awayTeamLabel.setText(awayInitials);
        for (Document document : players) {
            String teamInitials = document.getString("Team Initials");
            DefaultTableModel model;
            if (teamInitials.equals(homeInitials))
                model = (DefaultTableModel) homeTeamTable.getModel();
            else
                model = (DefaultTableModel) awayTeamTable.getModel();
            model.addRow(new Object[] {
                document.getString("Line-up"),
                document.getString("Shirt Number"),
                document.getString("Player Name"),
                document.getString("Position"),
                document.getString("Event")
            });
        }
        homeTeamTable.getColumnModel().getColumn(2).setMinWidth(125);
        homeTeamTable.getColumnModel().getColumn(3).setMinWidth(65);
        homeTeamTable.getColumnModel().getColumn(4).setMinWidth(65);
        awayTeamTable.getColumnModel().getColumn(2).setMinWidth(125);
        awayTeamTable.getColumnModel().getColumn(3).setMinWidth(65);
        awayTeamTable.getColumnModel().getColumn(4).setMinWidth(65);
        int i = 0;
        while (i < homeTeamTable.getColumnCount())
            if (!checkHomeColumn(i))
                i++;
        i = 0;
        while (i < awayTeamTable.getColumnCount())
            if (!checkAwayColumn(i))
                i++;
    }
    
    private boolean checkHomeColumn(int n) {
        for (int i = 0; i < homeTeamTable.getRowCount(); i++) {
            Object value = homeTeamTable.getValueAt(i, n);
            if (value != null)
                return false;
        }
        TableColumnModel model = homeTeamTable.getColumnModel();
        homeTeamTable.removeColumn(model.getColumn(n));
        return true;
    }
    
    private boolean checkAwayColumn(int n) {
        for (int i = 0; i < awayTeamTable.getRowCount(); i++) {
            Object value = awayTeamTable.getValueAt(i, n);
            if (value != null)
                return false;
        }
        TableColumnModel model = awayTeamTable.getColumnModel();
        awayTeamTable.removeColumn(model.getColumn(n));
        return true;
    }
    
    private void showPlayerFrame(String player) {
        PlayerFrame playerFrame = new PlayerFrame();
        playerFrame.setPlayerName(player);
        Document events = conn.countEventFromPlayerName(player, year).get(0);
        playerFrame.fillPlayerFrame(events, year);
        events = conn.countEventFromPlayerName(player).get(0);
        playerFrame.fillPlayerFrame(events);
        playerFrame.setVisible(true);
    }

    public void setYear(String year) {
        this.year = year;
    }

    public void setConnection(MongoConnection conn) {
        this.conn = conn;
    }
    
    private String year;
    private MongoConnection conn;

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel awayTeamLabel;
    private javax.swing.JTable awayTeamTable;
    private javax.swing.JLabel homeTeamLabel;
    private javax.swing.JTable homeTeamTable;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    // End of variables declaration//GEN-END:variables
}
